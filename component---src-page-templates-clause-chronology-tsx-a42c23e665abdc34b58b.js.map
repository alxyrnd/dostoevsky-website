{"version":3,"sources":["webpack:///./src/components/charts/Bar/Bar.module.css","webpack:///./src/templates/ClauseChronologyPage/ClauseChronologyPage.module.css","webpack:///./src/components/charts/LineChart/index.ts","webpack:///./src/components/charts/LineChart/LineChart.tsx","webpack:///./src/templates/ClauseChronologyPage/components/charts/ChronologyConvictedDynamics/index.ts","webpack:///./src/templates/ClauseChronologyPage/components/charts/ChronologyConvictedDynamics/ChronologyConvictedDynamics.tsx","webpack:///./src/templates/ClauseChronologyPage/components/charts/ChronologyPunishmentDynamics/index.ts","webpack:///./src/templates/ClauseChronologyPage/components/charts/ChronologyPunishmentDynamics/ChronologyPunishmentDynamics.tsx","webpack:///./src/templates/ClauseChronologyPage/components/tables/ClauseChronologyByResultTable/index.ts","webpack:///./src/templates/ClauseChronologyPage/components/tables/ClauseChronologyByResultTable/ClauseChronologyByResultTable.tsx","webpack:///./src/templates/ClauseChronologyPage/components/tables/ClauseChronologyByPunishmentTable/index.ts","webpack:///./src/templates/ClauseChronologyPage/components/tables/ClauseChronologyByPunishmentTable/ClauseChronologyByPunishmentTable.tsx","webpack:///./src/templates/ClauseChronologyPage/ClauseChronologyPage.tsx","webpack:///./src/templates/ClauseChronologyPage/index.ts","webpack:///./src/page-templates/clause-chronology.tsx","webpack:///./src/components/charts/Bar/Bar.tsx","webpack:///./src/components/charts/Bar/Bar.container.tsx","webpack:///./src/components/charts/Bar/index.ts"],"names":["module","exports","LineChart","chartRef","React","createRef","positionXLabel","data","isLabel","isXLabel","index","x","axis","ticks","length","element","attr","styleHorizontalGrid","isGrid","isYGrid","x1","styleVerticalGrid","isXGrid","y1","y2","getTooltipText","meta","value","metaDeserialized","JSON","parse","he","decode","e","console","error","lines","Object","entries","tooltip","lineKey","lineValue","push","replace","toString","label","join","type","units","pos","componentDidMount","this","props","groups","labels","tooltipDescription","series","map","g","values","slice","v","i","plugins","window","require","Chartist","appendToBody","tooltipFnc","Line","current","reverse","axisX","showGrid","labelOffset","y","axisY","onlyInteger","scaleMinSpace","offset","fullWidth","on","render","wrapperProps","ChartWrapper","title","ref","style","height","PureComponent","ChronologyConvictedDynamics","clauseNumber","years","isIframeMode","t","useLocale","message","year","downloadFilename","Состав","Год","totalConvicted","iframePath","getClauseLink","undefined","ChronologyPunishmentDynamics","getTooltipDescription","charts","primaryImprisonment","primarySuspended","primaryCommunityService","primaryForcedLabour","primaryCorrectionalLabour","primaryFine","coerciveMeasures","primaryOther","Bar","areLabelsRotated","chartType","ClauseChronologyByResultTable","tables","columns","key","rows","totalAcquittal","dismissalAbsenceOfEvent","dismissalAmnesty","dismissalRepentance","dismissalReconciliation","dismissalCourtFine","dismissalOther","Table","isEqualWidth","isColored","isNotPaddedLeft","ClauseChronologyByPunishmentTable","ClauseChronologyPage","view","partsCount","ClausePageLayout","pageType","hasParts","className","cn","classes","Helmet","defer","name","content","chartContainer","chartContainerFullWidth","tableContainer","withLocale","ClauseChronology","pageContext","location","accumulateNodes","edges","p","parameters","Layout","hasPageLayout","Meta","site","clauseId","parts","getLabels","width","remove","getBarSum","seriesLength","seriesIndex","foreignObject","document","createElementNS","setAttribute","x2","String","div","createElement","innerHTML","sum","appendChild","_node","parentElement","chartRefs","reduce","a","c","chartLabels","stackBars","horizontalBars","stretch","chartPadding","right","bottom","maxLabelsCount","wrapperHeight","Typography","chartTitle","isUpperCased","fromCharCode","barPartsByPunishment","BarContainer","areLabelsFiltered","otherProps","forbiddenChartsIndexes","forEach","chart","chartI","filteredLabels","forbiddenLabelsIndexes","find","keys","filterOutForbiddenIndexes","hasOwnProperty","filter","filteredGroups","filteredCharts"],"mappings":"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","file":"component---src-page-templates-clause-chronology-tsx-a42c23e665abdc34b58b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartTitle\":\"Bar-module--chart-title--3qQKi\",\"areLabelsRotated\":\"Bar-module--are-labels-rotated--1wm8w\",\"barPartsByPunishment\":\"Bar-module--bar-parts-by-punishment--3mpOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"charts\":\"ClauseChronologyPage-module--charts--2x2Kg\",\"chartContainer\":\"ClauseChronologyPage-module--chart-container--1Pcpr\",\"chartContainerFullWidth\":\"ClauseChronologyPage-module--chart-container-full-width--2G_K3\",\"tableContainer\":\"ClauseChronologyPage-module--table-container--AfJa3\"};","import LineChart from \"./LineChart\";\nexport default LineChart;\n","import React, { PureComponent } from \"react\";\nimport ChartWrapper from \"src/components/ChartWrapper\";\nimport Chartist, {\n  IChartistStepAxis,\n  ChartDrawData,\n  IChartDrawLabelData,\n  IChartDrawGridData,\n} from \"chartist\";\nimport he from \"he\";\n\ninterface LineChartProps extends React.ComponentProps<typeof ChartWrapper> {\n  groups: {\n    values: number[];\n    title: string;\n  }[];\n  tooltipDescription: {\n    [key: string]: string;\n  };\n  labels: string[];\n}\n\nconst Y_LABEL_MARGIN = 15;\n\nclass LineChart extends PureComponent<LineChartProps> {\n  private chartRef = React.createRef<HTMLDivElement>();\n\n  public componentDidMount(): void {\n    const { groups, labels, tooltipDescription } = this.props;\n    const series: { value: number }[][] = groups.map((g) =>\n      g.values.slice().map((v, i) => ({\n        value: v,\n        meta: { tooltip: tooltipDescription, label: labels[i] },\n      }))\n    );\n\n    const plugins = [];\n\n    if (typeof window !== `undefined`) {\n      require(\"chartist-plugin-tooltips\");\n      plugins.push(\n        Chartist.plugins.tooltip({\n          appendToBody: true,\n          tooltipFnc: this.getTooltipText,\n        })\n      );\n    }\n\n    const chart = new Chartist.Line(\n      this.chartRef.current,\n      {\n        labels: labels,\n        series: series.slice().reverse(),\n      },\n      {\n        axisX: {\n          showGrid: true,\n          labelOffset: {\n            y: Y_LABEL_MARGIN,\n          },\n        },\n        axisY: {\n          showGrid: true,\n          onlyInteger: true,\n          scaleMinSpace: 40,\n          labelOffset: {\n            y: 6,\n            x: 4,\n          },\n          offset: 35,\n        } as IChartistStepAxis,\n        fullWidth: true,\n        plugins,\n      }\n    );\n\n    chart.on(\"draw\", (data: ChartDrawData) => {\n      this.positionXLabel(data);\n      this.styleVerticalGrid(data);\n      this.styleHorizontalGrid(data);\n    });\n  }\n\n  render(): React.ReactNode {\n    const { groups, ...wrapperProps } = this.props;\n\n    return (\n      <ChartWrapper {...wrapperProps} labels={groups.map((g) => g.title)}>\n        <div ref={this.chartRef} style={{ height: 500 }}></div>\n      </ChartWrapper>\n    );\n  }\n\n  private positionXLabel = (data: ChartDrawData): void => {\n    if (!this.isLabel(data) || !this.isXLabel(data)) {\n      return;\n    }\n    if (data.index === 0) {\n      return;\n    }\n    const x = data.x || 0;\n\n    if (data.index === data.axis.ticks.length - 1) {\n      data.element.attr({\n        x: x - 23,\n      });\n      return;\n    }\n\n    data.element.attr({\n      x: x - 13,\n    });\n  };\n\n  /** Function to show horizontal grid a little left */\n  private styleHorizontalGrid = (data: ChartDrawData): void => {\n    if (!this.isGrid(data) || !this.isYGrid(data)) {\n      return;\n    }\n    data.element.attr({\n      x1: data.x1 - 5,\n    });\n  };\n\n  /** Function to show vertical grid under the canvas */\n  private styleVerticalGrid = (data: ChartDrawData): void => {\n    if (!this.isGrid(data) || !this.isXGrid(data)) {\n      return;\n    }\n    if (data.index === 0) {\n      data.element.attr({\n        y1: data.y1,\n        y2: data.y2 + Y_LABEL_MARGIN - 5,\n      });\n      return;\n    }\n    data.element.attr({\n      y1: data.y2,\n      y2: data.y2 + Y_LABEL_MARGIN - 5,\n    });\n  };\n\n  private getTooltipText = (meta: string, value: number) => {\n    let metaDeserialized: {\n      data: {\n        tooltip: {\n          [key: string]: string;\n        };\n        label: string;\n      };\n    };\n    try {\n      metaDeserialized = JSON.parse(he.decode(meta));\n    } catch (e) {\n      console.error(e);\n      return '<span class=\"chartist-tooltip-meta\">Error</span>';\n    }\n    const lines = [];\n    for (const [lineKey, lineValue] of Object.entries(\n      metaDeserialized.data.tooltip\n    )) {\n      lines.push(\n        `${lineKey}: ${lineValue\n          .replace(\"%%\", value.toString())\n          .replace(\"%label%\", metaDeserialized.data.label)}`\n      );\n    }\n    return `<span class=\"chartist-tooltip-meta\">${lines.join(\"<br>\")}</span>`;\n  };\n\n  private isLabel = (data: ChartDrawData): data is IChartDrawLabelData =>\n    data.type === \"label\";\n\n  private isXLabel = (data: IChartDrawLabelData) =>\n    data.axis?.units.pos === \"x\";\n\n  private isYGrid = (data: IChartDrawGridData) => data.axis?.units.pos === \"y\";\n\n  private isGrid = (data: ChartDrawData): data is IChartDrawGridData =>\n    data.type === \"grid\";\n\n  private isXGrid = (data: IChartDrawGridData) => data.axis?.units.pos === \"x\";\n}\n\nexport default LineChart;\n","import ChronologyConvictedDynamics from \"./ChronologyConvictedDynamics\";\nexport default ChronologyConvictedDynamics;\n","import React from \"react\";\nimport LineChart from \"src/components/charts/LineChart\";\nimport { getClauseLink } from \"src/config/routes\";\nimport { T, useLocale } from \"react-targem\";\n\ninterface ChronologyConvictedDynamicsProps {\n  isIframeMode?: boolean;\n  clauseNumber: number;\n  years: {\n    year: number;\n    totalConvicted: number; // Всего осуждено\n  }[];\n}\n\nconst ChronologyConvictedDynamics: React.SFC<ChronologyConvictedDynamicsProps> = (\n  props: ChronologyConvictedDynamicsProps\n) => {\n  const { clauseNumber, years, isIframeMode } = props;\n  const { t } = useLocale();\n\n  return (\n    <LineChart\n      isIframeMode={isIframeMode}\n      title={<T message=\"Динамика числа осужденных по основному составу\" />}\n      labels={years.map((y) => y.year.toString())}\n      downloadFilename={`${clauseNumber}-convicted-dynamics`}\n      tooltipDescription={{\n        Состав: t(\"{{ clauseNumber }} Основной состав\", { clauseNumber }),\n        Год: \"%label%\",\n        [t(\"Число человек\")]: \"%%\",\n      }}\n      groups={[\n        {\n          title: t(\"{{ clauseNumber }} Основной состав\", { clauseNumber }),\n          values: years.map((y) => y.totalConvicted),\n        },\n      ]}\n      iframePath={getClauseLink(\n        clauseNumber.toString(),\n        undefined,\n        \"chronology\",\n        \"iframe-convicted-dynamics\"\n      )}\n    />\n  );\n};\n\nexport default ChronologyConvictedDynamics;\n","import ChronologyPunishmentDynamics from \"./ChronologyPunishmentDynamics\";\nexport default ChronologyPunishmentDynamics;\n","import React from \"react\";\nimport Bar from \"src/components/charts/Bar\";\nimport { getClauseLink } from \"src/config/routes\";\nimport { T, useLocale } from \"react-targem\";\n\ninterface ChronologyConvictedDynamicsProps {\n  isIframeMode?: boolean;\n  clauseNumber: number;\n  years: {\n    year: number;\n\n    primaryImprisonment: number; // Лишение свободы\n    primarySuspended: number; // Условное осуждение к лишению свободы\n    primaryCommunityService: number; // Обязательные работы\n    primaryForcedLabour: number; // Принудительные работы\n    primaryCorrectionalLabour: number; // Исправительные работы\n    primaryFine: number; // Штраф\n    coerciveMeasures: number; // Принудительные меры к невменяемым\n    primaryOther: number; // Условное осуждение к иным мерам\n  }[];\n}\n\nconst ChronologyConvictedDynamics: React.SFC<ChronologyConvictedDynamicsProps> = (\n  props: ChronologyConvictedDynamicsProps\n) => {\n  const { clauseNumber, years, isIframeMode } = props;\n  const { t } = useLocale();\n\n  const getTooltipDescription = (title: string) => ({\n    [t(\"Состав\")]: \"Основной состав\",\n    [t(\"Наказание\")]: title,\n    [t(\"Число человек\")]: \"%%\",\n  });\n\n  const labels = years.map((y) => y.year.toString());\n\n  const charts = [\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.primaryImprisonment),\n        },\n      ],\n      title: t(\"Лишение свободы\"),\n      labels,\n      tooltipDescription: getTooltipDescription(t(\"Лишение свободы\")),\n    },\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.primarySuspended),\n        },\n      ],\n      labels,\n      title: t(\"условное осуждение к лишению свободы\"),\n      tooltipDescription: getTooltipDescription(\n        t(\"условное осуждение к лишению свободы\")\n      ),\n    },\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.primaryCommunityService),\n        },\n      ],\n      labels,\n      title: t(\"обязательные работы\"),\n      tooltipDescription: getTooltipDescription(t(\"обязательные работы\")),\n    },\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.primaryForcedLabour),\n        },\n      ],\n      labels,\n      title: t(\"принудительные работы\"),\n      tooltipDescription: getTooltipDescription(t(\"принудительные работы\")),\n    },\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.primaryCorrectionalLabour),\n        },\n      ],\n      labels,\n      title: t(\"исправительные работы\"),\n      tooltipDescription: getTooltipDescription(t(\"исправительные работы\")),\n    },\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.primaryFine),\n        },\n      ],\n      labels,\n      title: t(\"штраф\"),\n      tooltipDescription: getTooltipDescription(t(\"штраф\")),\n    },\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.coerciveMeasures),\n        },\n      ],\n      labels,\n      title: t(\"Принудительные меры к невменяемым\"),\n      tooltipDescription: getTooltipDescription(\n        t(\"Принудительные меры к невменяемым\")\n      ),\n    },\n    {\n      groups: [\n        {\n          title: t(\"Основной состав\"),\n          values: years.map((y) => y.primaryOther),\n        },\n      ],\n      labels,\n      title: t(\"условное осуждение к иным мерам\"),\n      tooltipDescription: getTooltipDescription(\n        t(\"условное осуждение к иным мерам\")\n      ),\n    },\n  ];\n\n  return (\n    <Bar\n      isIframeMode={isIframeMode}\n      title={<T message=\"Динамика наказаний по статье с 2009 по 2019 гг.\" />}\n      downloadFilename={`${clauseNumber}-punishment-dynamics`}\n      charts={charts}\n      areLabelsRotated\n      chartType=\"dynamicsPunishment\"\n      iframePath={getClauseLink(\n        clauseNumber.toString(),\n        undefined,\n        \"chronology\",\n        \"iframe-punishment-dynamics\"\n      )}\n    />\n  );\n};\n\nexport default ChronologyConvictedDynamics;\n","import ClauseChronologyByResultTable from \"./ClauseChronologyByResultTable\";\nexport default ClauseChronologyByResultTable;\n","import React from \"react\";\nimport Table from \"src/components/Table\";\nimport { useLocale, T } from \"react-targem\";\nimport { getClauseLink } from \"src/config/routes\";\n\ninterface Year {\n  year: number;\n  totalConvicted: number; // Всего осуждено\n\n  totalAcquittal: number; // Оправдано\n  dismissalAbsenceOfEvent: number; // Прекращено за отсутствием события, состава, непричастностью к преступлению\n  dismissalAmnesty: number; // Прекращено по амнистии\n  dismissalRepentance: number; // Прекращено в связи с деятельным раскаянием\n  dismissalReconciliation: number; // Прекращено за примирением с потерпевшим\n  dismissalCourtFine: number; // Прекращено судебный штраф\n  dismissalOther: number; // Прекращено по другим основаниям\n  coerciveMeasures: number; // Принудительные меры к невменяемым\n}\n\ninterface ClauseChronologyByResultProps {\n  clauseNumber: number;\n  years: Year[];\n}\n\nconst ClauseChronologyByResultTable: React.FC<ClauseChronologyByResultProps> = ({\n  clauseNumber,\n  years,\n}: ClauseChronologyByResultProps) => {\n  const { t } = useLocale();\n\n  const tables = [\n    {\n      title: t(\"Все года\"),\n      columns: [\n        { title: t(\"Год\"), key: \"1\" },\n        { title: t(\"Всего осуждено\"), key: \"2\" },\n        { title: t(\"Оправдано\"), key: \"3\" },\n        {\n          title: t(\n            \"Прекращено за отсутствием события, состава, непричастности к преступлению\"\n          ),\n          key: \"4\",\n        },\n        { title: t(\"Прекращено по амнистии\"), key: \"5\" },\n        { title: t(\"Прекращено в связи с деятельным раскаянием\"), key: \"6\" },\n        { title: t(\"Прекращено за примирением\"), key: \"7\" },\n        { title: t(\"Судебный штраф\"), key: \"8\" },\n        { title: t(\"Прекращено по другим основаниям\"), key: \"9\" },\n        { title: t(\"Принудительные меры к невменяемым\"), key: \"10\" },\n      ],\n      rows: years.map((y) => ({\n        key: y.year.toString(),\n        values: [\n          { key: \"1\", value: y.year },\n          { key: \"2\", value: y.totalConvicted },\n          { key: \"3\", value: y.totalAcquittal },\n          { key: \"4\", value: y.dismissalAbsenceOfEvent },\n          { key: \"5\", value: y.dismissalAmnesty },\n          { key: \"6\", value: y.dismissalRepentance },\n          { key: \"7\", value: y.dismissalReconciliation },\n          { key: \"8\", value: y.dismissalCourtFine },\n          { key: \"9\", value: y.dismissalOther },\n          { key: \"10\", value: y.coerciveMeasures },\n        ],\n      })),\n    },\n  ];\n\n  return (\n    <Table\n      isEqualWidth\n      isColored\n      title={\n        <T message=\"Динамика числа осужденных по основному составу. Основные параметры.\" />\n      }\n      downloadFilename={`${clauseNumber}-chronology-by-result`}\n      iframePath={getClauseLink(\n        clauseNumber,\n        undefined,\n        \"parts\",\n        \"iframe-table-chronology-by-result\"\n      )}\n      isNotPaddedLeft\n      tables={tables}\n    />\n  );\n};\n\nexport default ClauseChronologyByResultTable;\n","import ClauseChronologyByPunishmentTable from \"./ClauseChronologyByPunishmentTable\";\nexport default ClauseChronologyByPunishmentTable;\n","import React from \"react\";\nimport Table from \"src/components/Table\";\nimport { useLocale, T } from \"react-targem\";\nimport { getClauseLink } from \"src/config/routes\";\nimport { CountersByPunishment } from \"src/types\";\n\ninterface Year extends CountersByPunishment {\n  year: number;\n  totalConvicted: number; // Всего осуждено\n}\n\ninterface ClauseChronologyByPunishmentTableProps {\n  clauseNumber: number;\n  years: Year[];\n}\n\nconst ClauseChronologyByPunishmentTable: React.FC<ClauseChronologyByPunishmentTableProps> = ({\n  clauseNumber,\n  years,\n}: ClauseChronologyByPunishmentTableProps) => {\n  const { t } = useLocale();\n\n  const tables = [\n    {\n      title: t(\"Все года\"),\n      columns: [\n        { title: t(\"Год\"), key: \"1\" },\n        { title: t(\"Лишение свободы\"), key: \"2\" },\n        { title: t(\"Условно к лишению свободы\"), key: \"3\" },\n        { title: t(\"Обязательные работы\"), key: \"4\" },\n        {\n          title: t(\"Принудительные работы\"),\n          key: \"5\",\n        },\n        { title: t(\"Исправительные работы\"), key: \"6\" },\n        { title: t(\"Штраф\"), key: \"7\" },\n        { title: t(\"Принудительные меры к невменяемым\"), key: \"8\" },\n        { title: t(\"Условное к иным мерам\"), key: \"9\" },\n      ],\n      rows: years.map((y) => ({\n        key: y.year.toString(),\n        values: [\n          { key: \"1\", value: y.year },\n          { key: \"2\", value: y.primaryImprisonment },\n          { key: \"3\", value: y.primarySuspended },\n          { key: \"4\", value: y.primaryCommunityService },\n          { key: \"5\", value: y.primaryForcedLabour },\n          { key: \"6\", value: y.primaryCorrectionalLabour },\n          { key: \"7\", value: y.primaryFine },\n          { key: \"8\", value: y.coerciveMeasures },\n          { key: \"9\", value: y.primaryOther },\n        ],\n      })),\n    },\n  ];\n\n  return (\n    <Table\n      isEqualWidth\n      isColored\n      title={<T message=\"НАКАЗАНИЯ ПО СТАТЬЕ\" />}\n      downloadFilename={`${clauseNumber}-chronology-by-punishment`}\n      iframePath={getClauseLink(\n        clauseNumber,\n        undefined,\n        \"parts\",\n        \"iframe-table-chronology-by-punishment\"\n      )}\n      isNotPaddedLeft\n      tables={tables}\n    />\n  );\n};\n\nexport default ClauseChronologyByPunishmentTable;\n","import React, { PureComponent } from \"react\";\nimport ClausePageLayout from \"src/components/ClausePageLayout\";\nimport classes from \"./ClauseChronologyPage.module.css\";\nimport cn from \"clsx\";\nimport ChronologyConvictedDynamics from \"./components/charts/ChronologyConvictedDynamics\";\nimport ChronologyPunishmentDynamics from \"./components/charts/ChronologyPunishmentDynamics\";\nimport ClauseChronologyByResultTable from \"./components/tables/ClauseChronologyByResultTable\";\nimport ClauseChronologyByPunishmentTable from \"./components/tables/ClauseChronologyByPunishmentTable\";\nimport { T, withLocale, WithLocale } from \"react-targem\";\nimport { Helmet } from \"react-helmet\";\n\nexport type ClauseChronologyPageViewMode =\n  | \"page\"\n  | \"table\"\n  | \"iframe-convicted-dynamics\"\n  | \"iframe-punishment-dynamics\"\n  | \"iframe-table-chronology-by-result\"\n  | \"iframe-table-chronology-by-punishment\";\n\ninterface Year {\n  year: number;\n  totalConvicted: number; // Всего осуждено\n\n  primaryImprisonment: number; // Лишение свободы\n  primarySuspended: number; // Условное осуждение к лишению свободы\n  primaryCommunityService: number; // Обязательные работы\n  primaryForcedLabour: number; // Принудительные работы\n  primaryCorrectionalLabour: number; // Исправительные работы\n  primaryFine: number; // Штраф\n  coerciveMeasures: number; // Принудительные меры к невменяемым\n  primaryOther: number; // Условное осуждение к иным мерам\n\n  totalAcquittal: number; // Оправдано\n  dismissalAbsenceOfEvent: number; // Прекращено за отсутствием события, состава, непричастностью к преступлению\n  dismissalAmnesty: number; // Прекращено по амнистии\n  dismissalRepentance: number; // Прекращено в связи с деятельным раскаянием\n  dismissalReconciliation: number; // Прекращено за примирением с потерпевшим\n  dismissalCourtFine: number; // Прекращено судебный штраф\n  dismissalOther: number; // Прекращено по другим основаниям\n}\n\nexport interface ClauseChronologyPageProps extends WithLocale {\n  clauseNumber: number;\n  view: ClauseChronologyPageViewMode;\n  partsCount: number;\n  years: Year[];\n}\n\nclass ClauseChronologyPage extends PureComponent<ClauseChronologyPageProps> {\n  render(): React.ReactNode {\n    const { clauseNumber, view, partsCount, t } = this.props;\n\n    if (view === \"iframe-convicted-dynamics\") {\n      return <ChronologyConvictedDynamics {...this.props} isIframeMode />;\n    }\n\n    if (view === \"iframe-punishment-dynamics\") {\n      return <ChronologyPunishmentDynamics {...this.props} isIframeMode />;\n    }\n\n    return (\n      <ClausePageLayout\n        clauseNumber={clauseNumber}\n        title={<T message=\"Хронология\" />}\n        pageType=\"chronology\"\n        hasParts={partsCount > 1}\n      >\n        {view === \"page\" ? (\n          <div className={cn(classes.charts)}>\n            <Helmet defer={false}>\n              <title>\n                {`${t(\"Статья\")} ${clauseNumber} | ${t(\"Хронология\")} | ${t(\n                  \"Чарты\"\n                )}`}\n              </title>\n              <meta\n                name=\"description\"\n                content={t(\n                  \"На этой странице мы сравнили ключевые показатели по статье за период с 2009 по 2019 годы. Полноценных данных до 2009 года в открытом доступе не существует: Судебный департамент Верховного суда начал публиковать сводную статистику по рассмотрению судами уголовных дел после появления соответствующего закона и регламента в 2008 году.\"\n                )}\n              />\n            </Helmet>\n            <div className={cn(classes.chartContainer)}>\n              <T message=\"На этой странице мы сравнили ключевые показатели по статье за период с 2009 по 2019 годы. Полноценных данных до 2009 года в открытом доступе не существует: Судебный департамент Верховного суда начал публиковать сводную статистику по рассмотрению судами уголовных дел после появления соответствующего закона и регламента в 2008 году.\" />\n            </div>\n            <div className={cn(classes.chartContainer)}>\n              <ChronologyConvictedDynamics {...this.props} />\n            </div>\n            <div\n              className={cn(\n                classes.chartContainer,\n                classes.chartContainerFullWidth\n              )}\n            >\n              <ChronologyPunishmentDynamics {...this.props} />\n            </div>\n          </div>\n        ) : null}\n        {view === \"table\" ? (\n          <>\n            <Helmet defer={false}>\n              <title>\n                {`${t(\"Статья\")} ${clauseNumber} | ${t(\"Хронология\")} | ${t(\n                  \"Таблица\"\n                )}`}\n              </title>\n              <meta\n                name=\"description\"\n                content={t(\n                  \"На этой странице мы сравнили ключевые показатели по статье за период с 2009 по 2019 годы. Полноценных данных до 2009 года в открытом доступе не существует: Судебный департамент Верховного суда начал публиковать сводную статистику по рассмотрению судами уголовных дел после появления соответствующего закона и регламента в 2008 году.\"\n                )}\n              />\n            </Helmet>\n            <div className={cn(classes.tableContainer)}>\n              <ClauseChronologyByResultTable {...this.props} />\n            </div>\n            <div className={cn(classes.tableContainer)}>\n              <ClauseChronologyByPunishmentTable {...this.props} />\n            </div>\n          </>\n        ) : null}\n      </ClausePageLayout>\n    );\n  }\n}\n\nexport default withLocale(ClauseChronologyPage);\n","import ClauseChronologyPage from \"./ClauseChronologyPage\";\nexport default ClauseChronologyPage;\nexport type { ClauseChronologyPageViewMode } from \"./ClauseChronologyPage\";\n","import React, { PureComponent } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ClauseChronologyQuery } from \"types/graphql-types\";\nimport ClauseChronologyPage, {\n  ClauseChronologyPageViewMode,\n} from \"src/templates/ClauseChronologyPage\";\nimport Meta from \"src/components/Meta\";\nimport Layout from \"src/components/Layout\";\nimport { accumulateNodes, NoUndefinedField } from \"src/utils/objects\";\n\ninterface ClauseChronologyProps {\n  data: ClauseChronologyQuery;\n  location: Location;\n  pageContext: {\n    partRegex: string;\n    year: string;\n    clauseId: number;\n    view: ClauseChronologyPageViewMode;\n  };\n}\n\nclass ClauseChronology extends PureComponent<ClauseChronologyProps> {\n  render(): React.ReactNode {\n    const { data, pageContext, location } = this.props;\n    const years = accumulateNodes<\n      ClauseChronologyQuery[\"years\"][\"edges\"][number][\"node\"],\n      ClauseChronologyQuery[\"years\"][\"edges\"][number]\n    >(data.years.edges, \"year\", [\"part\"]).map((p) => {\n      const parameters = p.parameters as NoUndefinedField<typeof p.parameters>;\n      return {\n        ...p,\n        ...parameters,\n      };\n    });\n\n    return (\n      <Layout\n        location={location}\n        hasPageLayout={\n          pageContext.view === \"page\" || pageContext.view === \"table\"\n        }\n      >\n        <Meta site={data.site?.meta} />\n        <ClauseChronologyPage\n          view={pageContext.view}\n          clauseNumber={pageContext.clauseId}\n          partsCount={data.parts.edges.length}\n          years={years}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query ClauseChronology($partRegex: String!, $clauseRegex: String!) {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    parts: allApiServerData(\n      filter: { part: { regex: $partRegex }, year: { eq: 2019 } }\n    ) {\n      edges {\n        node {\n          part\n        }\n      }\n    }\n    years: allApiServerData(filter: { part: { regex: $clauseRegex } }) {\n      edges {\n        node {\n          year\n          part\n          parameters {\n            totalConvicted\n            primaryImprisonment\n            primarySuspended\n            primaryCommunityService\n            primaryForcedLabour\n            primaryCorrectionalLabour\n            primaryFine\n            coerciveMeasures\n            primaryOther\n            totalAcquittal: acquittal\n            dismissalAbsenceOfEvent\n            dismissalAmnesty\n            dismissalRepentance\n            dismissalReconciliation\n            dismissalCourtFine\n            dismissalOther\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ClauseChronology;\n","import React, { PureComponent } from \"react\";\nimport ChartWrapper from \"src/components/ChartWrapper\";\nimport Chartist, {\n  IChartistStepAxis,\n  ChartDrawData,\n  IChartDrawLabelData,\n  IChartDrawGridData,\n} from \"chartist\";\nimport classes from \"./Bar.module.css\";\nimport cn from \"clsx\";\nimport he from \"he\";\nimport Typography from \"src/components/ui-kit/Typography\";\n\ninterface BarProps extends React.ComponentProps<typeof ChartWrapper> {\n  charts: {\n    groups: {\n      values: number[];\n      title: string;\n    }[];\n    title?: React.ReactNode;\n    tooltipDescription: {\n      [key: string]: string;\n    };\n    labels: string[];\n  }[];\n  maxLabelsCount: number;\n  areLabelsRotated?: boolean;\n  isIframeMode?: boolean;\n  chartType: \"partsByPunishment\" | \"dynamicsPunishment\";\n}\n\nconst ROW_HEIGHT = 50;\nconst Y_LABEL_MARGIN = 15;\n\nclass Bar extends PureComponent<BarProps> {\n  private chartRefs: React.RefObject<HTMLDivElement>[];\n\n  public constructor(props: BarProps) {\n    super(props);\n    this.chartRefs = [];\n    for (let i = 0; i < props.charts.length; i++) {\n      this.chartRefs[i] = React.createRef<HTMLDivElement>();\n    }\n  }\n\n  public componentDidMount(): void {\n    const { charts, areLabelsRotated, chartType } = this.props;\n    for (let i = 0; i < charts.length; i++) {\n      const { groups, tooltipDescription, labels } = charts[i];\n\n      const series: { value: number }[][] = groups.map((g) =>\n        g.values\n          .slice()\n          .map((v, i) => ({\n            value: v,\n            meta: {\n              tooltip: tooltipDescription,\n              sum:\n                chartType === \"partsByPunishment\"\n                  ? groups.reduce((a, c) => {\n                      a += c.values[i];\n                      return a;\n                    }, 0)\n                  : null,\n            },\n          }))\n          .reverse()\n      );\n\n      const chartLabels: string[] = labels.slice().reverse();\n\n      const plugins = [];\n\n      if (typeof window !== `undefined`) {\n        require(\"chartist-plugin-tooltips\");\n        plugins.push(\n          Chartist.plugins.tooltip({\n            appendToBody: true,\n            tooltipFnc: this.getTooltipText,\n          })\n        );\n      }\n\n      const chart = new Chartist.Bar(\n        this.chartRefs[i].current,\n        {\n          labels: chartLabels,\n          series,\n        },\n        {\n          stackBars: true,\n          horizontalBars: true,\n          axisX: {\n            onlyInteger: true,\n            showGrid: true,\n            labelOffset: {\n              y: areLabelsRotated ? 10 : Y_LABEL_MARGIN,\n            },\n          },\n          axisY: {\n            stretch: true,\n            showGrid: true,\n            labelOffset: {\n              x: 0,\n              y: -17,\n            },\n            offset: 0,\n            fullWidth: true,\n          } as IChartistStepAxis,\n          chartPadding: {\n            right: chartType === \"partsByPunishment\" ? 50 : 0,\n            bottom: areLabelsRotated ? 20 : 0,\n          },\n          plugins,\n        }\n      );\n\n      chart.on(\"draw\", (data: ChartDrawData) => {\n        this.positionXLabel(data);\n        this.styleVerticalGrid(data);\n        this.styleHorizontalGrid(data);\n        if (chartType === \"partsByPunishment\") {\n          this.getBarSum(data, series.length);\n        }\n      });\n    }\n  }\n\n  render(): React.ReactNode {\n    const {\n      charts,\n      areLabelsRotated,\n      maxLabelsCount,\n      chartType,\n      ...wrapperProps\n    } = this.props;\n\n    const wrapperHeight =\n      chartType === \"partsByPunishment\" && charts.length\n        ? 60 * charts[0].labels.length + 50\n        : maxLabelsCount * ROW_HEIGHT;\n\n    return (\n      <ChartWrapper {...wrapperProps} labels={this.getLabels()}>\n        {charts.map((c, i) => (\n          <div key={i} style={{ width: `${100 / charts.length}%` }}>\n            {chartType !== \"partsByPunishment\" ? (\n              <Typography className={cn(classes.chartTitle)} isUpperCased>\n                <b>\n                  <small>{c.title}</small>\n                </b>\n              </Typography>\n            ) : null}\n            <div\n              ref={this.chartRefs[i]}\n              className={cn({\n                [`ct-chart-${String.fromCharCode(97 + i)}`]: charts.length > 1,\n                [classes.areLabelsRotated]: areLabelsRotated,\n                [classes.barPartsByPunishment]:\n                  chartType === \"partsByPunishment\",\n              })}\n              style={{\n                height: wrapperHeight,\n              }}\n            ></div>\n          </div>\n        ))}\n      </ChartWrapper>\n    );\n  }\n\n  private getLabels = () => {\n    const { charts } = this.props;\n    if (charts.length === 1) {\n      return charts[0].groups.map((g) => g.title);\n    }\n    return undefined;\n  };\n\n  private positionXLabel = (data: ChartDrawData): void => {\n    if (!this.isLabel(data) || !this.isXLabel(data)) {\n      return;\n    }\n    data.element.attr({\n      width: 35,\n    });\n    if (data.index === 0) {\n      return;\n    }\n    const x = data.x || 0;\n\n    if (data.index === data.axis.ticks.length - 1) {\n      data.element.attr({\n        x: x - 15,\n      });\n      return;\n    }\n\n    data.element.attr({\n      x: x - 6,\n    });\n  };\n\n  /** Function to remove all horizontal lines, except for the last one */\n  private styleHorizontalGrid = (data: ChartDrawData): void => {\n    if (!this.isGrid(data) || !this.isYGrid(data)) {\n      return;\n    }\n    if (data.index !== 0) {\n      data.element.remove();\n    }\n  };\n\n  /** Function to show vertical grid under the canvas */\n  private styleVerticalGrid = (data: ChartDrawData): void => {\n    if (!this.isGrid(data) || !this.isXGrid(data)) {\n      return;\n    }\n    data.element.attr({\n      y1: data.y2,\n      y2: data.y2 + Y_LABEL_MARGIN - 5,\n    });\n  };\n\n  private getTooltipText = (meta: string, value: number) => {\n    let metaDeserialized: {\n      data: {\n        tooltip: {\n          [key: string]: string;\n        };\n      };\n    };\n    try {\n      metaDeserialized = JSON.parse(he.decode(meta));\n    } catch (e) {\n      console.error(e);\n      return '<span class=\"chartist-tooltip-meta\">Error</span>';\n    }\n    const lines = [];\n    for (const [lineKey, lineValue] of Object.entries(\n      metaDeserialized.data.tooltip\n    )) {\n      lines.push(`${lineKey}: ${lineValue.replace(\"%%\", value.toString())}`);\n    }\n    return `<span class=\"chartist-tooltip-meta\">${lines.join(\"<br>\")}</span>`;\n  };\n\n  private getBarSum = (data: ChartDrawData, seriesLength: number) => {\n    if (data.type === \"bar\" && data.seriesIndex === seriesLength - 1) {\n      const foreignObject = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"foreignObject\"\n      );\n      foreignObject.setAttribute(\"x\", data.x2 + 7);\n      foreignObject.setAttribute(\"y\", String(data.y2 - 12));\n      foreignObject.setAttribute(\"width\", \"100\");\n      foreignObject.setAttribute(\"height\", \"100\");\n\n      const div = document.createElement(\"span\");\n      div.innerHTML = data.meta.sum;\n      div.setAttribute(\"class\", \"ct-bar-sum\");\n\n      foreignObject.appendChild(div);\n      data.element._node.parentElement.appendChild(foreignObject);\n    }\n  };\n\n  private isLabel = (data: ChartDrawData): data is IChartDrawLabelData =>\n    data.type === \"label\";\n\n  private isXLabel = (data: IChartDrawLabelData) =>\n    data.axis?.units.pos === \"x\";\n\n  private isGrid = (data: ChartDrawData): data is IChartDrawGridData =>\n    data.type === \"grid\";\n\n  private isYGrid = (data: IChartDrawGridData) => data.axis?.units.pos === \"y\";\n\n  private isXGrid = (data: IChartDrawGridData) => data.axis?.units.pos === \"x\";\n}\n\nexport default Bar;\n","import React, { PureComponent } from \"react\";\nimport Bar from \"./Bar\";\n\ninterface BarContainerProps\n  extends Omit<React.ComponentProps<typeof Bar>, \"maxLabelsCount\"> {\n  areLabelsFiltered?: boolean;\n}\ninterface BarContainerState {}\n\nclass BarContainer extends PureComponent<BarContainerProps, BarContainerState> {\n  render(): React.ReactNode {\n    const { charts, areLabelsFiltered, ...otherProps } = this.props;\n    const maxLabelsCount = charts[0].labels.length;\n    const forbiddenChartsIndexes: { [key: number]: boolean } = {};\n    charts.forEach((chart, chartI) => {\n      let filteredLabels = [...chart.labels];\n      const forbiddenLabelsIndexes: { [key: number]: boolean } = {};\n      const { groups } = chart;\n\n      groups[0].values.forEach((v: number, i: number) => {\n        if (v !== 0 && v !== null) {\n          return;\n        }\n        const notEmptyGroupWithSameLabel = groups.find(\n          (g) => g.values[i] !== 0 && g.values[i] !== null\n        );\n        if (notEmptyGroupWithSameLabel) {\n          return;\n        }\n        forbiddenLabelsIndexes[i] = true;\n      });\n\n      if (Object.keys(forbiddenLabelsIndexes).length === 0) {\n        return (\n          <Bar\n            maxLabelsCount={maxLabelsCount}\n            charts={charts}\n            {...otherProps}\n          />\n        );\n      }\n\n      if (\n        Object.keys(forbiddenLabelsIndexes).length === groups[0].values.length\n      ) {\n        forbiddenChartsIndexes[chartI] = true;\n        return;\n      }\n      if (!areLabelsFiltered) {\n        return;\n      }\n      const filterOutForbiddenIndexes = (v: unknown, i: number) =>\n        !forbiddenLabelsIndexes.hasOwnProperty(i);\n\n      filteredLabels = filteredLabels.filter(filterOutForbiddenIndexes);\n\n      const filteredGroups = groups.map((g) => ({\n        title: g.title,\n        values: g.values.filter(filterOutForbiddenIndexes),\n      }));\n\n      chart.groups = filteredGroups;\n      chart.labels = filteredLabels;\n    });\n\n    const filteredCharts = charts.filter(\n      (v: unknown, i: number) => !forbiddenChartsIndexes.hasOwnProperty(i)\n    );\n\n    return (\n      <Bar\n        maxLabelsCount={maxLabelsCount}\n        charts={filteredCharts}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default BarContainer;\n","import BarContainer from \"./Bar.container\";\nexport default BarContainer;\n"],"sourceRoot":""}