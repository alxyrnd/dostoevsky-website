import React from "react";
import { TargemProvider, Utils } from "react-targem";
import { DEFAULT_LOCALE, LOCALE_CODES } from "src/config/locales";
import { isSupportedLocaleInPath } from "src/utils/locales";
// translation.json file is autogenerated and ignored
// so we use require() to prevent tsc compile time errors before webpack is first run
// eslint-disable-next-line @typescript-eslint/no-var-requires
const translationsJson = require("src/i18n/translations.json");

interface LocaleProviderProps {}

export class LocaleProvider extends React.Component<LocaleProviderProps> {
  public componentDidMount(): void {
    const path = window.location?.pathname || "/";
    if (path.includes("admin")) {
      return;
    }
    if (!isSupportedLocaleInPath(path)) {
      const defaultLocale = Utils.getBrowserLocale(
        LOCALE_CODES,
        DEFAULT_LOCALE
      );
      window.location.replace(
        `/${defaultLocale}${path}${window.location.search}`
      );
    }
  }

  public render(): React.ReactNode {
    const { children } = this.props;

    return (
      <TargemProvider
        detectLocale={false}
        defaultLocale={DEFAULT_LOCALE}
        translations={translationsJson}
      >
        {children}
      </TargemProvider>
    );
  }
}
