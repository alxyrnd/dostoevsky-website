{"version":3,"sources":["webpack:///./src/templates/ArticleFullPage/assets/telegram.svg","webpack:///./src/templates/ArticleFullPage/ArticleFullHead.module.css","webpack:///./src/templates/ArticleFullPage/ArticleFullPage.module.css","webpack:///./src/templates/ArticleFullPage/assets/facebook.svg","webpack:///./src/templates/ArticleFullPage/assets/twitter.svg","webpack:///./src/templates/NoPage.tsx","webpack:///./src/templates/ArticleFullPage/assets/blog-head.svg","webpack:///./src/templates/ArticleFullPage/assets/analytics-head.svg","webpack:///./src/templates/ArticleFullPage/ArticleFullHead.tsx","webpack:///./src/templates/ArticleFullPage/index.ts","webpack:///./src/templates/ArticleFullPage/ArticleFullPage.tsx","webpack:///./src/page-templates/article-full.tsx"],"names":["module","exports","NoPage","getArticleBackground","type","require","withLocale","props","article","locale","className","cn","classes","blogHeader","style","backgroundImage","tag","Container","blogHeader__inner","to","getLinkForLocale","blogHeader__lnk","Typography","size","variant","color","isUpperCased","message","font","blogHeader__title","isCentered","title","blogHeader__share","blogHeader__social","href","target","rel","src","alt","ArticleFullPage","useEffect","script","document","createElement","async","defer","querySelectorAll","forEach","el","appendChild","blogContainer","blogArticle","blogArticle__date","date","blogArticle__author","author","articleBody","dangerouslySetInnerHTML","__html","html","ArticleFull","data","location","meta","site","node","markdownRemark","frontmatter","Layout","Meta"],"mappings":"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","file":"component---src-page-templates-article-full-tsx-1126d81d0644adfdb969.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/telegram-05a3eebff273244c05571669f0eedab0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogHeader\":\"ArticleFullHead-module--blog-header--3qRS-\",\"blogHeader__inner\":\"ArticleFullHead-module--blog-header__inner--1rQcc\",\"blogHeader__title\":\"ArticleFullHead-module--blog-header__title--1ILyl\",\"blogHeader__lnk\":\"ArticleFullHead-module--blog-header__lnk--2ZeFR\",\"blogHeader__share\":\"ArticleFullHead-module--blog-header__share--okiQj\",\"blogHeader__social\":\"ArticleFullHead-module--blog-header__social--3Ofy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogContainer\":\"ArticleFullPage-module--blog-container--3pdL_\",\"blogArticle\":\"ArticleFullPage-module--blog-article--3iGAh\",\"blogArticle__date\":\"ArticleFullPage-module--blog-article__date--1NgPx\",\"blogArticle__author\":\"ArticleFullPage-module--blog-article__author--1LigU\",\"articleBody\":\"ArticleFullPage-module--article-body--1A3Va\"};","module.exports = __webpack_public_path__ + \"static/facebook-9080aee86e995718ad0329223a3638bf.svg\";","module.exports = __webpack_public_path__ + \"static/twitter-d51788b5bb9a919e901bd5f6d3677b74.svg\";","import React from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst NoPage = () => <h1>404</h1>;\nexport default NoPage;\n","module.exports = __webpack_public_path__ + \"static/blog-head-c155f02918c322b0884299ba798721ac.svg\";","module.exports = __webpack_public_path__ + \"static/analytics-head-f58f689b270a52fba3a3f5d7a2278319.svg\";","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport classes from \"./ArticleFullHead.module.css\";\nimport cn from \"clsx\";\nimport Typography from \"src/components/ui-kit/Typography\";\nimport { T, withLocale, WithLocale } from \"react-targem\";\nimport { Link } from \"gatsby\";\nimport Container from \"../../components/ui-kit/Container\";\nimport { Article } from \"./ArticleFullPage\";\nimport { getLinkForLocale } from \"src/utils/locales\";\n\nexport interface ArticleFullPageProps extends WithLocale {\n  article: Article;\n}\n\nconst getArticleBackground = (type: Article[\"tag\"]) => {\n  switch (type) {\n    case \"Аналитика\":\n      return require(\"./assets/analytics-head.svg\");\n    case \"Блог\":\n      return require(\"./assets/blog-head.svg\");\n  }\n};\n\nconst ArticleFullHead = (props: ArticleFullPageProps): JSX.Element => {\n  const { article, locale } = props;\n  return (\n    <header\n      className={cn(classes.blogHeader)}\n      style={{\n        backgroundImage: `url(${getArticleBackground(article.tag)})`,\n      }}\n    >\n      <Container>\n        <div className={cn(classes.blogHeader__inner)}>\n          <Link\n            to={getLinkForLocale(locale, \"/\")}\n            className={cn(classes.blogHeader__lnk)}\n          >\n            <Typography\n              size=\"normal\"\n              variant=\"b\"\n              color=\"secondary\"\n              isUpperCased\n            >\n              <T message={article.tag} />\n            </Typography>\n          </Link>\n          <Typography\n            variant=\"h1\"\n            font=\"serif\"\n            className={cn(classes.blogHeader__title)}\n            isCentered\n          >\n            <span>\n              <T message={article.title || \"\"} />\n            </span>\n          </Typography>\n\n          <section className={cn(classes.blogHeader__share)}>\n            <Typography font=\"serif\">\n              <em>\n                <T message=\"Поделиться:\" />\n              </em>\n            </Typography>\n            <div className={cn(classes.blogHeader__social)}>\n              <a href=\"https://telegram.com\" target=\"_blank\" rel=\"noreferrer\">\n                <img\n                  src={require(\"./assets/telegram.svg\")}\n                  alt=\"Our Telegram page\"\n                />\n              </a>\n              <a href=\"https://facebook.com\" target=\"_blank\" rel=\"noreferrer\">\n                <img\n                  src={require(\"./assets/facebook.svg\")}\n                  alt=\"Our Facebook page\"\n                />\n              </a>\n              <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noreferrer\">\n                <img\n                  src={require(\"./assets/twitter.svg\")}\n                  alt=\"Our Twitter page\"\n                />\n              </a>\n            </div>\n          </section>\n        </div>\n      </Container>\n    </header>\n  );\n};\n\nexport default withLocale(ArticleFullHead);\n","import ArticleFullPage from \"./ArticleFullPage\";\nexport default ArticleFullPage;\n","/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport classes from \"./ArticleFullPage.module.css\";\nimport cn from \"clsx\";\nimport Typography from \"src/components/ui-kit/Typography\";\nimport { T } from \"react-targem\";\nimport ArticleFullHead from \"./ArticleFullHead\";\nimport { ArticleTag } from \"src/types\";\nexport interface Article {\n  html?: string;\n  title: string;\n  author: string;\n  date: string;\n  slug: string;\n  tag: ArticleTag;\n  teaser: string;\n  locale: string;\n}\n\nexport interface ArticleFullPageProps {\n  article: Article;\n}\n\nconst ArticleFullPage = (props: ArticleFullPageProps): JSX.Element => {\n  const { article } = props;\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.defer = true;\n    script.src = \"https://public.flourish.studio/resources/embed.js\";\n    document\n      .querySelectorAll(\"div.flourish-embed\")\n      .forEach((el) => el.appendChild(script));\n  }, []);\n\n  return (\n    <section className={cn(classes.blogContainer)}>\n      <ArticleFullHead article={article} />\n      <article className={cn(classes.blogArticle)}>\n        <div className={cn(classes.blogArticle__date)}>\n          <Typography isUpperCased isCentered>\n            <T message={article.date || \"\"} />\n          </Typography>\n        </div>\n        <div className={cn(classes.blogArticle__author)}>\n          <Typography isCentered>\n            <T message={article.author || \"Аноним\"} />\n          </Typography>\n        </div>\n        <div className={cn(classes.articleBody)}>\n          <Typography>\n            <div dangerouslySetInnerHTML={{ __html: article.html || \"\" }} />\n          </Typography>\n        </div>\n      </article>\n    </section>\n  );\n};\n\nexport default ArticleFullPage;\n","/* eslint-disable no-console */\nimport { graphql } from \"gatsby\";\nimport React from \"react\";\nimport { ArticleFullQuery } from \"../../types/graphql-types\";\nimport Meta from \"src/components/Meta\";\nimport Layout from \"src/components/Layout\";\nimport ArticleFullPage from \"src/templates/ArticleFullPage\";\nimport NoPage from \"src/templates/NoPage\";\n\ninterface ArticleFullPageProps {\n  data: ArticleFullQuery;\n  location: Location;\n}\n\nconst ArticleFull: React.FC<ArticleFullPageProps> = ({\n  data,\n  location,\n}: ArticleFullPageProps) => {\n  const meta = data.site?.meta;\n  const node = data.markdownRemark;\n  if (node) {\n    const article: any = {\n      ...node.frontmatter,\n      html: node.html || \"\",\n    };\n    return (\n      <Layout location={location}>\n        <Meta site={meta} />\n        <ArticleFullPage article={article} />\n      </Layout>\n    );\n  } else return <NoPage />;\n};\n\nexport default ArticleFull;\n\nexport const pageQuery = graphql`\n  query ArticleFull($slug: String) {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date\n        slug\n        title\n        author\n        date\n        teaser\n        tag\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}