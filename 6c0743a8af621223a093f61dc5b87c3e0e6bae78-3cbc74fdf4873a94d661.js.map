{"version":3,"sources":["webpack:///./src/components/Promo/Promo.tsx","webpack:///./src/components/Promo/index.ts","webpack:///./src/components/Promo/Promo.module.css","webpack:///./src/components/ChartWrapper/ChartWrapper.tsx","webpack:///./src/components/ChartWrapper/ChartWrapper.container.tsx","webpack:///./src/components/ChartWrapper/index.ts","webpack:///./node_modules/dom-to-image/src/dom-to-image.js","webpack:///./src/components/ChartWrapper/ChartWrapper.module.css"],"names":["Promo","locale","useLocale","Container","className","classes","promo","Typography","font","variant","component","message","Button","to","getLinkForLocale","button","module","exports","ChartWrapper","render","this","props","children","labels","title","isIframeMode","onDownloadButtonClick","downloadAreaRef","iframePath","isSeparateLabels","centerTitle","cn","chart","twoColumns","leftColumn","ref","center","isUpperCased","legend","flexWrap","map","l","i","key","legendItem","width","height","String","fromCharCode","legendIcon","legendTitle","chartsContainer","footer","border","color","target","rel","href","actions","EmbedModal","DownloadButton","onClick","PureComponent","defaultProps","ChartWrapperContainer","React","createRef","handleDownloadButtonClick","a","current","isImageGenerationDebug","domtoimage","toSvg","dataUrl","img","Image","src","w","window","open","document","write","outerHTML","toPng","saveAs","downloadFilename","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","dataAsUrl","content","type","isDataUrl","search","canvasToBlob","canvas","toBlob","Promise","resolve","binaryString","atob","toDataURL","split","length","binaryArray","Uint8Array","charCodeAt","Blob","resolveUrl","baseUrl","doc","implementation","createHTMLDocument","base","createElement","head","appendChild","body","getAndEncode","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","send","imagePlaceholder","console","error","uid","index","Math","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","push","escapeXhtml","makeImage","uri","reject","image","onload","onerror","node","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","value","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","shouldProcess","nothingToInline","then","readUrls","urls","done","forEach","inline","filter","data","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","style","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","background","inlined","setProperty","getPropertyPriority","inlineBackground","HTMLImageElement","newImage","childNodes","child","element","newImages","defaultOptions","undefined","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","root","HTMLCanvasElement","clone","cloneChildren","original","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","source","name","copyProperties","styleElement","selector","formatCssText","formatCssProperties","createTextNode","formatPseudoElementStyle","clonePseudoElement","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","processClone","cloneChildrenInOrder","parent","childClone","embedFonts","inlineImages","bgcolor","backgroundColor","Object","keys","property","XMLSerializer","serializeToString","xhtml","foreignObject","svg","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","styleNode"],"mappings":"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","file":"6c0743a8af621223a093f61dc5b87c3e0e6bae78-3cbc74fdf4873a94d661.js","sourcesContent":["import React from \"react\";\nimport classes from \"./Promo.module.css\";\nimport Container from \"src/components/ui-kit/Container\";\nimport Typography from \"src/components/ui-kit/Typography\";\nimport Button from \"../ui-kit/Button\";\nimport { T, useLocale } from \"react-targem\";\nimport { getLinkForLocale } from \"src/utils/locales\";\n\nconst Promo: React.FC = () => {\n  const { locale } = useLocale();\n  return (\n    <Container>\n      <div className={classes.promo}>\n        <Typography font=\"serif\" variant=\"h3\" component=\"h3\">\n          <i>\n            <T message=\"Нужны данные по всем статьям и годам?\" />\n          </i>\n        </Typography>\n        <Typography font=\"serif\" variant=\"h2\" component=\"p\">\n          <b>\n            <T message=\"Полный доступ к датасету\" />\n          </b>\n        </Typography>\n        <Button\n          to={getLinkForLocale(locale, \"/full\")}\n          className={classes.button}\n        >\n          <T message=\"Перейти\" />\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Promo;\n","import Promo from \"./Promo\";\nexport default Promo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"promo\":\"Promo-module--promo--25Kdp\",\"button\":\"Promo-module--button--3yOSZ\"};","import React, { PureComponent } from \"react\";\nimport classes from \"./ChartWrapper.module.css\";\nimport cn from \"clsx\";\nimport Typography from \"src/components/ui-kit/Typography\";\nimport EmbedModal from \"src/components/EmbedModal\";\nimport DownloadButton from \"src/components/DownloadButton\";\n\nimport \"chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css\";\nimport \"chartist/dist/chartist.min.css\";\n\ninterface ChartWrapperProps {\n  labels?: string[];\n  title: React.ReactNode;\n  downloadFilename: string;\n  isIframeMode?: boolean;\n  onDownloadButtonClick: () => void;\n  downloadAreaRef: React.Ref<HTMLDivElement>;\n  iframePath: string;\n  isSeparateLabels?: boolean;\n  centerTitle?: boolean;\n}\n\nclass ChartWrapper extends PureComponent<\n  React.PropsWithChildren<ChartWrapperProps>\n> {\n  public static defaultProps = {\n    isIframeMode: false,\n  };\n\n  render(): React.ReactNode {\n    const {\n      children,\n      labels,\n      title,\n      isIframeMode,\n      onDownloadButtonClick,\n      downloadAreaRef,\n      iframePath,\n      isSeparateLabels = false,\n      centerTitle = false,\n    } = this.props;\n\n    return (\n      <div className={cn(classes.chart)}>\n        <div className={cn(classes.twoColumns)}>\n          <div className={cn(classes.leftColumn)} ref={downloadAreaRef}>\n            <Typography\n              font=\"sans-serif\"\n              className={cn(classes.title, {\n                [classes.center]: centerTitle,\n              })}\n              variant=\"h3\"\n              isUpperCased\n            >\n              <b>{title}</b>\n            </Typography>\n            <div\n              className={cn(classes.legend, {\n                [classes.flexWrap]: isSeparateLabels,\n              })}\n            >\n              {labels?.map((l, i) => (\n                <div key={i} className={cn(classes.legendItem)}>\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    className={`ct-series-${String.fromCharCode(97 + i)}`}\n                  >\n                    <rect\n                      width=\"16\"\n                      height=\"16\"\n                      className={cn(classes.legendIcon)}\n                    ></rect>\n                  </svg>\n                  <Typography\n                    variant=\"span\"\n                    className={cn(classes.legendTitle)}\n                  >\n                    <b>{l}</b>\n                  </Typography>\n                </div>\n              ))}\n            </div>\n            <div className={cn(classes.chartsContainer)}>{children}</div>\n            <div className={cn(classes.footer)}>\n              <hr className={cn(classes.border)} />\n              <Typography color=\"muted\">\n                <small>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"http://cdep.ru/index.php?id=79\"\n                  >\n                    Источник: Судебный департамент\n                  </a>\n                </small>\n              </Typography>\n            </div>\n          </div>\n          {!isIframeMode ? (\n            <div className={cn(classes.actions)}>\n              <EmbedModal iframePath={iframePath} />\n              <DownloadButton onClick={onDownloadButtonClick} />\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChartWrapper;\n","import React, { PureComponent } from \"react\";\nimport ChartWrapper from \"./ChartWrapper\";\nimport domtoimage from \"dom-to-image\";\nimport { saveAs } from \"file-saver\";\n\ninterface ChartWrapperContainerProps\n  extends Omit<\n    React.ComponentProps<typeof ChartWrapper>,\n    \"onDownloadButtonClick\" | \"downloadAreaRef\"\n  > {\n  isImageGenerationDebug?: boolean;\n}\n\nclass ChartWrapperContainer extends PureComponent<ChartWrapperContainerProps> {\n  public static defaultProps = {\n    isImageGenerationDebug: false,\n  };\n\n  private downloadAreaRef = React.createRef<HTMLDivElement>();\n\n  render(): React.ReactNode {\n    return (\n      <ChartWrapper\n        {...this.props}\n        onDownloadButtonClick={this.handleDownloadButtonClick}\n        downloadAreaRef={this.downloadAreaRef}\n      ></ChartWrapper>\n    );\n  }\n\n  private handleDownloadButtonClick = async () => {\n    if (!this.downloadAreaRef.current) {\n      return;\n    }\n\n    if (this.props.isImageGenerationDebug) {\n      const dataUrl = await domtoimage.toSvg(this.downloadAreaRef.current);\n      const img = new Image();\n      img.src = dataUrl;\n      const w = window.open(\"\");\n      w?.document.write(img.outerHTML);\n      return;\n    }\n\n    const dataUrl = await domtoimage.toPng(this.downloadAreaRef.current);\n    saveAs(dataUrl, this.props.downloadFilename);\n  };\n}\n\nexport default ChartWrapperContainer;\n","import ChartWrapperContainer from \"./ChartWrapper.container\";\nexport default ChartWrapperContainer;\n","(function (global) {\n  'use strict';\n\n  var util = newUtil();\n  var inliner = newInliner();\n  var fontFaces = newFontFaces();\n  var images = newImages(); // Default impl options\n\n  var defaultOptions = {\n    // Default is to fail on error, no placeholder\n    imagePlaceholder: undefined,\n    // Default cache bust is false, it will use the cache\n    cacheBust: false\n  };\n  var domtoimage = {\n    toSvg: toSvg,\n    toPng: toPng,\n    toJpeg: toJpeg,\n    toBlob: toBlob,\n    toPixelData: toPixelData,\n    impl: {\n      fontFaces: fontFaces,\n      images: images,\n      util: util,\n      inliner: inliner,\n      options: {}\n    }\n  };\n  if (typeof module !== 'undefined') module.exports = domtoimage;else global.domtoimage = domtoimage;\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options\n   * @param {Function} options.filter - Should return true if passed node should be included in the output\n   *          (excluding node means excluding it's children as well). Not called on the root node.\n   * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n   * @param {Number} options.width - width to be applied to node before rendering.\n   * @param {Number} options.height - height to be applied to node before rendering.\n   * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n   * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n              defaults to 1.0.\n   * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n   * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n   * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n   * */\n\n  function toSvg(node, options) {\n    options = options || {};\n    copyOptions(options);\n    return Promise.resolve(node).then(function (node) {\n      return cloneNode(node, options.filter, true);\n    }).then(embedFonts).then(inlineImages).then(applyOptions).then(function (clone) {\n      return makeSvgDataUri(clone, options.width || util.width(node), options.height || util.height(node));\n    });\n\n    function applyOptions(clone) {\n      if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n      if (options.width) clone.style.width = options.width + 'px';\n      if (options.height) clone.style.height = options.height + 'px';\n      if (options.style) Object.keys(options.style).forEach(function (property) {\n        clone.style[property] = options.style[property];\n      });\n      return clone;\n    }\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n   * */\n\n\n  function toPixelData(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.getContext('2d').getImageData(0, 0, util.width(node), util.height(node)).data;\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n   * */\n\n\n  function toPng(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.toDataURL();\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n   * */\n\n\n  function toJpeg(node, options) {\n    options = options || {};\n    return draw(node, options).then(function (canvas) {\n      return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image blob\n   * */\n\n\n  function toBlob(node, options) {\n    return draw(node, options || {}).then(util.canvasToBlob);\n  }\n\n  function copyOptions(options) {\n    // Copy options to impl options for use in impl\n    if (typeof options.imagePlaceholder === 'undefined') {\n      domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n    } else {\n      domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n    }\n\n    if (typeof options.cacheBust === 'undefined') {\n      domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n    } else {\n      domtoimage.impl.options.cacheBust = options.cacheBust;\n    }\n  }\n\n  function draw(domNode, options) {\n    return toSvg(domNode, options).then(util.makeImage).then(util.delay(100)).then(function (image) {\n      var canvas = newCanvas(domNode);\n      canvas.getContext('2d').drawImage(image, 0, 0);\n      return canvas;\n    });\n\n    function newCanvas(domNode) {\n      var canvas = document.createElement('canvas');\n      canvas.width = options.width || util.width(domNode);\n      canvas.height = options.height || util.height(domNode);\n\n      if (options.bgcolor) {\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = options.bgcolor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n\n      return canvas;\n    }\n  }\n\n  function cloneNode(node, filter, root) {\n    if (!root && filter && !filter(node)) return Promise.resolve();\n    return Promise.resolve(node).then(makeNodeCopy).then(function (clone) {\n      return cloneChildren(node, clone, filter);\n    }).then(function (clone) {\n      return processClone(node, clone);\n    });\n\n    function makeNodeCopy(node) {\n      if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n      return node.cloneNode(false);\n    }\n\n    function cloneChildren(original, clone, filter) {\n      var children = original.childNodes;\n      if (children.length === 0) return Promise.resolve(clone);\n      return cloneChildrenInOrder(clone, util.asArray(children), filter).then(function () {\n        return clone;\n      });\n\n      function cloneChildrenInOrder(parent, children, filter) {\n        var done = Promise.resolve();\n        children.forEach(function (child) {\n          done = done.then(function () {\n            return cloneNode(child, filter);\n          }).then(function (childClone) {\n            if (childClone) parent.appendChild(childClone);\n          });\n        });\n        return done;\n      }\n    }\n\n    function processClone(original, clone) {\n      if (!(clone instanceof Element)) return clone;\n      return Promise.resolve().then(cloneStyle).then(clonePseudoElements).then(copyUserInput).then(fixSvg).then(function () {\n        return clone;\n      });\n\n      function cloneStyle() {\n        copyStyle(window.getComputedStyle(original), clone.style);\n\n        function copyStyle(source, target) {\n          if (source.cssText) target.cssText = source.cssText;else copyProperties(source, target);\n\n          function copyProperties(source, target) {\n            util.asArray(source).forEach(function (name) {\n              target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n            });\n          }\n        }\n      }\n\n      function clonePseudoElements() {\n        [':before', ':after'].forEach(function (element) {\n          clonePseudoElement(element);\n        });\n\n        function clonePseudoElement(element) {\n          var style = window.getComputedStyle(original, element);\n          var content = style.getPropertyValue('content');\n          if (content === '' || content === 'none') return;\n          var className = util.uid();\n          clone.className = clone.className + ' ' + className;\n          var styleElement = document.createElement('style');\n          styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n          clone.appendChild(styleElement);\n\n          function formatPseudoElementStyle(className, element, style) {\n            var selector = '.' + className + ':' + element;\n            var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n            return document.createTextNode(selector + '{' + cssText + '}');\n\n            function formatCssText(style) {\n              var content = style.getPropertyValue('content');\n              return style.cssText + ' content: ' + content + ';';\n            }\n\n            function formatCssProperties(style) {\n              return util.asArray(style).map(formatProperty).join('; ') + ';';\n\n              function formatProperty(name) {\n                return name + ': ' + style.getPropertyValue(name) + (style.getPropertyPriority(name) ? ' !important' : '');\n              }\n            }\n          }\n        }\n      }\n\n      function copyUserInput() {\n        if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n        if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n      }\n\n      function fixSvg() {\n        if (!(clone instanceof SVGElement)) return;\n        clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        if (!(clone instanceof SVGRectElement)) return;\n        ['width', 'height'].forEach(function (attribute) {\n          var value = clone.getAttribute(attribute);\n          if (!value) return;\n          clone.style.setProperty(attribute, value);\n        });\n      }\n    }\n  }\n\n  function embedFonts(node) {\n    return fontFaces.resolveAll().then(function (cssText) {\n      var styleNode = document.createElement('style');\n      node.appendChild(styleNode);\n      styleNode.appendChild(document.createTextNode(cssText));\n      return node;\n    });\n  }\n\n  function inlineImages(node) {\n    return images.inlineAll(node).then(function () {\n      return node;\n    });\n  }\n\n  function makeSvgDataUri(node, width, height) {\n    return Promise.resolve(node).then(function (node) {\n      node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n      return new XMLSerializer().serializeToString(node);\n    }).then(util.escapeXhtml).then(function (xhtml) {\n      return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n    }).then(function (foreignObject) {\n      return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' + foreignObject + '</svg>';\n    }).then(function (svg) {\n      return 'data:image/svg+xml;charset=utf-8,' + svg;\n    });\n  }\n\n  function newUtil() {\n    return {\n      escape: escape,\n      parseExtension: parseExtension,\n      mimeType: mimeType,\n      dataAsUrl: dataAsUrl,\n      isDataUrl: isDataUrl,\n      canvasToBlob: canvasToBlob,\n      resolveUrl: resolveUrl,\n      getAndEncode: getAndEncode,\n      uid: uid(),\n      delay: delay,\n      asArray: asArray,\n      escapeXhtml: escapeXhtml,\n      makeImage: makeImage,\n      width: width,\n      height: height\n    };\n\n    function mimes() {\n      /*\n       * Only WOFF and EOT mime types for fonts are 'real'\n       * see http://www.iana.org/assignments/media-types/media-types.xhtml\n       */\n      var WOFF = 'application/font-woff';\n      var JPEG = 'image/jpeg';\n      return {\n        'woff': WOFF,\n        'woff2': WOFF,\n        'ttf': 'application/font-truetype',\n        'eot': 'application/vnd.ms-fontobject',\n        'png': 'image/png',\n        'jpg': JPEG,\n        'jpeg': JPEG,\n        'gif': 'image/gif',\n        'tiff': 'image/tiff',\n        'svg': 'image/svg+xml'\n      };\n    }\n\n    function parseExtension(url) {\n      var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n      if (match) return match[1];else return '';\n    }\n\n    function mimeType(url) {\n      var extension = parseExtension(url).toLowerCase();\n      return mimes()[extension] || '';\n    }\n\n    function isDataUrl(url) {\n      return url.search(/^(data:)/) !== -1;\n    }\n\n    function toBlob(canvas) {\n      return new Promise(function (resolve) {\n        var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        var length = binaryString.length;\n        var binaryArray = new Uint8Array(length);\n\n        for (var i = 0; i < length; i++) {\n          binaryArray[i] = binaryString.charCodeAt(i);\n        }\n\n        resolve(new Blob([binaryArray], {\n          type: 'image/png'\n        }));\n      });\n    }\n\n    function canvasToBlob(canvas) {\n      if (canvas.toBlob) return new Promise(function (resolve) {\n        canvas.toBlob(resolve);\n      });\n      return toBlob(canvas);\n    }\n\n    function resolveUrl(url, baseUrl) {\n      var doc = document.implementation.createHTMLDocument();\n      var base = doc.createElement('base');\n      doc.head.appendChild(base);\n      var a = doc.createElement('a');\n      doc.body.appendChild(a);\n      base.href = baseUrl;\n      a.href = url;\n      return a.href;\n    }\n\n    function uid() {\n      var index = 0;\n      return function () {\n        return 'u' + fourRandomChars() + index++;\n\n        function fourRandomChars() {\n          /* see http://stackoverflow.com/a/6248722/2519373 */\n          return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n        }\n      };\n    }\n\n    function makeImage(uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        image.onload = function () {\n          resolve(image);\n        };\n\n        image.onerror = reject;\n        image.src = uri;\n      });\n    }\n\n    function getAndEncode(url) {\n      var TIMEOUT = 30000;\n\n      if (domtoimage.impl.options.cacheBust) {\n        // Cache bypass so we dont have CORS issues with cached images\n        // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n        url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n      }\n\n      return new Promise(function (resolve) {\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = done;\n        request.ontimeout = timeout;\n        request.responseType = 'blob';\n        request.timeout = TIMEOUT;\n        request.open('GET', url, true);\n        request.send();\n        var placeholder;\n\n        if (domtoimage.impl.options.imagePlaceholder) {\n          var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n\n          if (split && split[1]) {\n            placeholder = split[1];\n          }\n        }\n\n        function done() {\n          if (request.readyState !== 4) return;\n\n          if (request.status !== 200) {\n            if (placeholder) {\n              resolve(placeholder);\n            } else {\n              fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n            }\n\n            return;\n          }\n\n          var encoder = new FileReader();\n\n          encoder.onloadend = function () {\n            var content = encoder.result.split(/,/)[1];\n            resolve(content);\n          };\n\n          encoder.readAsDataURL(request.response);\n        }\n\n        function timeout() {\n          if (placeholder) {\n            resolve(placeholder);\n          } else {\n            fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n          }\n        }\n\n        function fail(message) {\n          console.error(message);\n          resolve('');\n        }\n      });\n    }\n\n    function dataAsUrl(content, type) {\n      return 'data:' + type + ';base64,' + content;\n    }\n\n    function escape(string) {\n      return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    }\n\n    function delay(ms) {\n      return function (arg) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(arg);\n          }, ms);\n        });\n      };\n    }\n\n    function asArray(arrayLike) {\n      var array = [];\n      var length = arrayLike.length;\n\n      for (var i = 0; i < length; i++) {\n        array.push(arrayLike[i]);\n      }\n\n      return array;\n    }\n\n    function escapeXhtml(string) {\n      return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n    }\n\n    function width(node) {\n      var leftBorder = px(node, 'border-left-width');\n      var rightBorder = px(node, 'border-right-width');\n      return node.scrollWidth + leftBorder + rightBorder;\n    }\n\n    function height(node) {\n      var topBorder = px(node, 'border-top-width');\n      var bottomBorder = px(node, 'border-bottom-width');\n      return node.scrollHeight + topBorder + bottomBorder;\n    }\n\n    function px(node, styleProperty) {\n      var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n      return parseFloat(value.replace('px', ''));\n    }\n  }\n\n  function newInliner() {\n    var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n    return {\n      inlineAll: inlineAll,\n      shouldProcess: shouldProcess,\n      impl: {\n        readUrls: readUrls,\n        inline: inline\n      }\n    };\n\n    function shouldProcess(string) {\n      return string.search(URL_REGEX) !== -1;\n    }\n\n    function readUrls(string) {\n      var result = [];\n      var match;\n\n      while ((match = URL_REGEX.exec(string)) !== null) {\n        result.push(match[1]);\n      }\n\n      return result.filter(function (url) {\n        return !util.isDataUrl(url);\n      });\n    }\n\n    function inline(string, url, baseUrl, get) {\n      return Promise.resolve(url).then(function (url) {\n        return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n      }).then(get || util.getAndEncode).then(function (data) {\n        return util.dataAsUrl(data, util.mimeType(url));\n      }).then(function (dataUrl) {\n        return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n      });\n\n      function urlAsRegex(url) {\n        return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n      }\n    }\n\n    function inlineAll(string, baseUrl, get) {\n      if (nothingToInline()) return Promise.resolve(string);\n      return Promise.resolve(string).then(readUrls).then(function (urls) {\n        var done = Promise.resolve(string);\n        urls.forEach(function (url) {\n          done = done.then(function (string) {\n            return inline(string, url, baseUrl, get);\n          });\n        });\n        return done;\n      });\n\n      function nothingToInline() {\n        return !shouldProcess(string);\n      }\n    }\n  }\n\n  function newFontFaces() {\n    return {\n      resolveAll: resolveAll,\n      impl: {\n        readAll: readAll\n      }\n    };\n\n    function resolveAll() {\n      return readAll(document).then(function (webFonts) {\n        return Promise.all(webFonts.map(function (webFont) {\n          return webFont.resolve();\n        }));\n      }).then(function (cssStrings) {\n        return cssStrings.join('\\n');\n      });\n    }\n\n    function readAll() {\n      return Promise.resolve(util.asArray(document.styleSheets)).then(getCssRules).then(selectWebFontRules).then(function (rules) {\n        return rules.map(newWebFont);\n      });\n\n      function selectWebFontRules(cssRules) {\n        return cssRules.filter(function (rule) {\n          return rule.type === CSSRule.FONT_FACE_RULE;\n        }).filter(function (rule) {\n          return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n        });\n      }\n\n      function getCssRules(styleSheets) {\n        var cssRules = [];\n        styleSheets.forEach(function (sheet) {\n          try {\n            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n          }\n        });\n        return cssRules;\n      }\n\n      function newWebFont(webFontRule) {\n        return {\n          resolve: function resolve() {\n            var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n            return inliner.inlineAll(webFontRule.cssText, baseUrl);\n          },\n          src: function src() {\n            return webFontRule.style.getPropertyValue('src');\n          }\n        };\n      }\n    }\n  }\n\n  function newImages() {\n    return {\n      inlineAll: inlineAll,\n      impl: {\n        newImage: newImage\n      }\n    };\n\n    function newImage(element) {\n      return {\n        inline: inline\n      };\n\n      function inline(get) {\n        if (util.isDataUrl(element.src)) return Promise.resolve();\n        return Promise.resolve(element.src).then(get || util.getAndEncode).then(function (data) {\n          return util.dataAsUrl(data, util.mimeType(element.src));\n        }).then(function (dataUrl) {\n          return new Promise(function (resolve, reject) {\n            element.onload = resolve;\n            element.onerror = reject;\n            element.src = dataUrl;\n          });\n        });\n      }\n    }\n\n    function inlineAll(node) {\n      if (!(node instanceof Element)) return Promise.resolve(node);\n      return inlineBackground(node).then(function () {\n        if (node instanceof HTMLImageElement) return newImage(node).inline();else return Promise.all(util.asArray(node.childNodes).map(function (child) {\n          return inlineAll(child);\n        }));\n      });\n\n      function inlineBackground(node) {\n        var background = node.style.getPropertyValue('background');\n        if (!background) return Promise.resolve(node);\n        return inliner.inlineAll(background).then(function (inlined) {\n          node.style.setProperty('background', inlined, node.style.getPropertyPriority('background'));\n        }).then(function () {\n          return node;\n        });\n      }\n    }\n  }\n})(this);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ChartWrapper-module--chart--7QQlG\",\"chartsContainer\":\"ChartWrapper-module--charts-container--17Cp0\",\"legend\":\"ChartWrapper-module--legend--bCx34\",\"flexWrap\":\"ChartWrapper-module--flex-wrap--1FtVd\",\"legendIcon\":\"ChartWrapper-module--legend-icon--kmFI1\",\"legendItem\":\"ChartWrapper-module--legend-item--3e_N9\",\"legendTitle\":\"ChartWrapper-module--legend-title--1JkOL\",\"title\":\"ChartWrapper-module--title--QkwxQ\",\"center\":\"ChartWrapper-module--center--3DXhR\",\"twoColumns\":\"ChartWrapper-module--two-columns--38ZRi\",\"leftColumn\":\"ChartWrapper-module--left-column--lN5OP\",\"footer\":\"ChartWrapper-module--footer--17-VO\",\"border\":\"ChartWrapper-module--border--3chDv\",\"actions\":\"ChartWrapper-module--actions--2r9pl\"};"],"sourceRoot":""}